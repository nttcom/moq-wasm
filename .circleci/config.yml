version: 2.1

commands:
  record_build_env:
    steps:
      - run:
          name: Record build environment to use as cache key
          command: |
            echo $OS_VERSION | tee /tmp/build-env
            rustc --version | tee /tmp/build-env
            echo $CIRCLECI_CACHE_VERSION | tee /tmp/cache-ver
  save_cache_:
    steps:
      - save_cache:
          key: cache-cargo-target-{{ checksum "/tmp/cache-ver" }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/build-env" }}-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
            - target
  restore_cache_:
    steps:
      - restore_cache:
          keys:
            - cache-cargo-target-{{ checksum "/tmp/cache-ver" }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/build-env" }}-{{ checksum "Cargo.lock" }}
            - cache-cargo-target-{{ checksum "/tmp/cache-ver" }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/build-env" }}

jobs:
  rust_linter_and_formatter_and_test:
    docker:
      - image: rust:latest
    steps:
      - checkout
      - record_build_env
      - restore_cache_
      - run:
          name: Install Rust toolchain and Clippy
          command: |
            rustup component add clippy
            rustup component add rustfmt
      - run:
          name: Run Clippy
          command: |
            cargo clippy -- -D warnings
      - run:
          name: Check code formatting
          command: |
            cargo fmt --check
      - run:
          name: Run Unit Tests
          command: |
            cargo test
      - save_cache_
  prettier:
    docker:
      - image: cimg/node:21.6.2
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install ./js
      - run:
          name: Check Prettier Formatting
          command: npx prettier --check "js/**/*.{js,jsx,ts,tsx,json,css,md}"
  coverage_report:
    docker:
      - image: rust:latest
    environment:
      CIRCLECI_CACHE_VERSION: 1
    steps:
      - checkout
      - record_build_env
      - restore_cache_
      - run:
          name: Get GitHub Apps Token
          command: |
            
      - run:
          name: Post Coverage Report
          command: |
            apt update && apt install -y jq
            cargo install cargo-llvm-cov
            rustup component add llvm-tools-preview

            artifact_link="https://output.circle-artifacts.com/output/job/${CIRCLE_WORKFLOW_JOB_ID}/artifacts/${CIRCLE_NODE_INDEX}/coverage-report/index.html"

            cov_result=$(cargo llvm-cov | awk '/Filename/,0')
            comment="\`\`\`shell-session
            ${cov_result}
            \`\`\`
            
            [Coverage report details](${artifact_link})
            "

            cargo llvm-cov report --html

            github_comment_verion=6.0.4
            pr_number=$(basename ${CIRCLE_PULL_REQUEST})

            GITHUB_APPS_TOKEN="$(bash .circleci/get_token.sh)"

            curl -L https://github.com/suzuki-shunsuke/github-comment/releases/download/v${github_comment_verion}/github-comment_${github_comment_verion}_linux_amd64.tar.gz -o linux_amd64.tar.gz
            tar -zxvf linux_amd64.tar.gz
            ./github-comment hide --token ${GITHUB_APPS_TOKEN} --org ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --pr ${pr_number} --condition 'Comment.HasMeta && Comment.Meta.TemplateKey == "default"'
            ./github-comment post --token ${GITHUB_APPS_TOKEN} --org ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --pr ${pr_number} --template "${comment}"
      - store_artifacts:
          path: target/llvm-cov/html
          destination: coverage-report
      - save_cache_
workflows:
  version: 2
  build_and_test:
    jobs:
      - rust_linter_and_formatter_and_test:
          filters:
            branches:
              ignore: /main|master/
      - prettier:
          filters:
            branches:
              ignore: /main|master/
      - coverage_report:
          requires:
            - rust_linter_and_formatter_and_test
            - prettier
          filters:
            branches:
              ignore: /main|master/
