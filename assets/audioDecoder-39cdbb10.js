var _=Object.defineProperty;var j=(u,o,r)=>o in u?_(u,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):u[o]=r;var d=(u,o,r)=>(j(u,typeof o!="symbol"?o+"":o,r),r);(function(){"use strict";class r{constructor(t=1800){d(this,"buffer",[]);d(this,"minDelayMs",50);this.maxBufferSize=t}push(t,s,n){const c=performance.now(),a={groupId:t,objectId:s,timestamp:c,object:n},f=this.findInsertPos(t,s);this.buffer.splice(f,0,a),this.buffer.length>this.maxBufferSize&&(console.warn("JitterBuffer is full, removing the oldest element"),this.buffer.shift())}pop(){if(this.buffer.length===0)return null;const t=this.buffer[0];return performance.now()-t.timestamp<this.minDelayMs?null:(this.buffer.shift(),t.object)}findInsertPos(t,s){for(let n=this.buffer.length-1;n>=0;n--){const c=this.buffer[n];if(c.groupId===t&&c.objectId<s||c.groupId<t)return n+1}return 0}}function l(e){const s=new DataView(e.buffer,e.byteOffset,e.byteLength).getUint32(0),n=e.slice(4,4+s),c=new TextDecoder().decode(n),a=JSON.parse(c),f=e.slice(4+s);return{meta:a,chunkArray:f}}function m(e){self.postMessage({audioData:e}),e.close()}let i;async function h(){const e={output:m,error:n=>{console.log(n.message)}},t={codec:"opus",sampleRate:48e3,numberOfChannels:1,bitrate:64e3},s=new AudioDecoder(e);return s.configure(t),s}const p=10,b=new r;setInterval(()=>{const e=b.pop();e&&g(e)},p),self.onmessage=async e=>{const t={objectId:e.data.subgroupStreamObject.object_id,objectPayloadLength:e.data.subgroupStreamObject.object_payload_length,objectPayload:e.data.subgroupStreamObject.object_payload,objectStatus:e.data.subgroupStreamObject.object_status};b.push(e.data.groupId,t.objectId,t)};async function g(e){const{meta:t,chunkArray:s}=l(e.objectPayload),n=new EncodedAudioChunk({type:t.type,timestamp:t.timestamp,duration:t.duration,data:s});i||(i=await h()),await i.decode(n)}})();
