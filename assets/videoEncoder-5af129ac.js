(function(){"use strict";let t,i;const c={codec:"avc1.640028",avc:{format:"annexb"},hardwareAcceleration:"prefer-hardware",width:1920,height:1080,bitrate:5e6,scalabilityMode:"L1T1",framerate:30,latencyMode:"realtime"};function d(){let e=0,o=performance.now();return{addBytes(a){e+=a;const r=performance.now();if(r-o>=1e3){const n=e*8/1e6;console.log(`Encoded bitrate: ${n.toFixed(2)} Mbps`),e=0,o=r}}}}const s=d();function l(e,o){s.addBytes(e.byteLength),self.postMessage({chunk:e,metadata:o})}async function f(){const e={output:l,error:a=>{console.log(a.message)}};console.log("isEncoderConfig Supported",await VideoEncoder.isConfigSupported(c));const o=new VideoEncoder(e);return o.configure(c),o}async function u(e){let o=0;t||(t=await f());const a=e.getReader();for(;;){const r=await a.read();if(r.done)break;const n=r.value;if(t.encodeQueueSize>10)console.error("videoEncoder.encodeQueueSize > 10",t.encodeQueueSize),n.close();else{const m=o%i==0;t.encode(n,{keyFrame:m}),o++,n.close()}}}self.onmessage=async e=>{if(e.data.type==="keyframeInterval")i=e.data.keyframeInterval;else if(e.data.type==="videoStream"){const o=e.data.videoStream;if(!o){console.error("MediaStreamTrack が渡されていません");return}await u(o)}}})();
