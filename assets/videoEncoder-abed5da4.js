(function(){"use strict";let t,r;const c={codec:"av01.0.08M.08",width:1920,height:1080,bitrate:15e6,scalabilityMode:"L1T1",framerate:30};function s(){let e=0,o=performance.now();return{addBytes(n){e+=n;const i=performance.now();if(i-o>=1e3){const a=e*8/1e6;console.log(`Encoded bitrate: ${a.toFixed(2)} Mbps`),e=0,o=i}}}}const l=s();function u(e,o){l.addBytes(e.byteLength),self.postMessage({chunk:e,metadata:o})}async function d(){const e={output:u,error:n=>{console.log(n.message)}};console.log("isEncoderConfig Supported",await VideoEncoder.isConfigSupported(c));const o=new VideoEncoder(e);return o.configure(c),o}async function f(e){let o=0;console.log("initializeVideoEncoder"),t=await d();const n=e.getReader();for(;;){const i=await n.read();if(i.done)break;const a=i.value;if(t.encodeQueueSize>10){console.error("videoEncoder.encodeQueueSize > 10",t.encodeQueueSize),a.close();continue}(!t||t.state==="closed")&&(console.log("Re-initialize video encoder"),t=await d(),o=0);const g=o%r==0;t.encode(a,{keyFrame:g}),o++,a.close()}}self.onmessage=async e=>{if(e.data.type==="keyframeInterval")r=e.data.keyframeInterval;else if(e.data.type==="videoStream"){const o=e.data.videoStream;if(!o){console.error("MediaStreamTrack が渡されていません");return}await f(o)}}})();
